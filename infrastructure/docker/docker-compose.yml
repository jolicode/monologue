version: '3.7'

volumes:
    postgres-data: {}

services:
    router:
        image: "ghcr.io/jolicode/monologue/router:${ROUTER_VERSION:-latest}"
        build:
            context: services/router
            # cache_to:
            #     - "ghcr.io/jolicode/monologue/router:${ROUTER__VERSION:-latest}"
            # cache_from:
            #     - "ghcr.io/jolicode/monologue/router:${ROUTER__VERSION:-latest}"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "./services/router/certs:/etc/ssl/certs"
        network_mode: host

    frontend:
        image: "ghcr.io/jolicode/monologue/frontend:${FRONTEND_VERSION:-latest}"
        build:
            context: services/php
            target: frontend
            # cache_to:
            #     - "ghcr.io/jolicode/monologue/frontend:${FRONTEND_VERSION:-latest}"
            # cache_from:
            #     - "ghcr.io/jolicode/monologue/frontend:${FRONTEND_VERSION:-latest}"
        depends_on:
            - postgres
        volumes:
            - "../../${PROJECT_DIRECTORY}:/home/app/application:cached"
        environment:
            - "PHP_VERSION=${PHP_VERSION}"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.rule=Host(${PROJECT_DOMAINS})"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.tls=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.rule=Host(${PROJECT_DOMAINS})"
            # Comment the next line to be able to access frontend via HTTP instead of HTTPS
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.middlewares=redirect-to-https@file"

    postgres:
        image: postgres:15.2
        environment:
            POSTGRES_PASSWORD: monologue
            POSTGRES_USER: monologue
            POSTGRES_DB: monologue
        volumes:
            - postgres-data:/var/lib/postgresql/data
